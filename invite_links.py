# invite_links.py

import uuid
import datetime
from astrology_utils import get_pg_connection  # –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ë–î

BOT_USERNAME = "astrotwinstest_bot"  # –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ –∏–º—è –±–æ—Ç–∞

def create_portrait_invite(user_id):
    token = str(uuid.uuid4())
    link = f"https://t.me/{BOT_USERNAME}?start=portrait_{token}"
    created_at = datetime.datetime.utcnow()

    conn = get_pg_connection()
    try:
        with conn:
            cursor = conn.cursor()
            cursor.execute(
                "INSERT INTO portrait_links (token, creator_id, created_at, used) VALUES (%s, %s, %s, %s)",
                (token, user_id, created_at, False)
            )
    finally:
        conn.close()

    return link

def get_portrait_invite(token):
    conn = get_pg_connection()
    try:
        with conn:
            cursor = conn.cursor()
            cursor.execute(
                "SELECT * FROM portrait_links WHERE token = %s", (token,)
            )
            return cursor.fetchone()
    finally:
        conn.close()

def mark_invite_used(token):
    conn = get_pg_connection()
    try:
        with conn:
            cursor = conn.cursor()
            cursor.execute(
                "UPDATE portrait_links SET used = TRUE WHERE token = %s", (token,)
            )
    finally:
        conn.close()

def build_share_button(link):
    from telegram import InlineKeyboardMarkup, InlineKeyboardButton  # –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–¥ telegram.ext

    markup = InlineKeyboardMarkup([
        [InlineKeyboardButton(
            text="üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥—Ä—É–≥—É", switch_inline_query=link
        )]
    ])
    return markup
